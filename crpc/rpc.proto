syntax = "proto3";

package crpc;

service PayServer {
    //
    // CreateReceipt is used to create blockchain deposit address in
    // case of blockchain media, and lightning network invoice in
    // case of the lightning media, which will be used to receive money from
    // external entity.
    rpc CreateReceipt (CreateReceiptRequest) returns (CreateReceiptResponse);

    //
    // ValidateReceipt is used to validate receipt for given asset and media.
    rpc ValidateReceipt (ValidateReceiptRequest) returns (EmptyResponse);

    //
    // Balance is used to determine balance.
    rpc Balance (BalanceRequest) returns (BalanceResponse);

    //
    // EstimateFee estimates the fee of the payment.
    rpc EstimateFee (EstimateFeeRequest) returns (EstimateFeeResponse);

    //
    // SendPayment sends payment to the given recipient,
    // ensures in the validity of the receipt as well as the
    // account has enough money for doing that.
    rpc SendPayment (SendPaymentRequest) returns (Payment);

    //
    // PaymentByID is used to fetch the information about payment, by the
    // given system payment id.
    rpc PaymentByID (PaymentByIDRequest) returns (Payment);

    //
    // PaymentsByReceipt is used to fetch the information about payment, by the
    // given receipt.
    rpc PaymentsByReceipt (PaymentsByReceiptRequest) returns (PaymentsByReceiptResponse);

    //
    // ListPayments returnes list of payment which were registered by the
    // system.
    rpc ListPayments (ListPaymentsRequest) returns (ListPaymentsResponse);
}

message EmptyRequest {
}

message EmptyResponse {
}

message CreateReceiptRequest {
    //
    // Asset is an acronim of the crypto currency.
    Asset asset = 1;

    //
    // Media is a type of technology which is used to transport value of
    // underlying asset.
    Media media = 2;

    //
    // (optional) Amount is the amount which should be received on this
    // receipt.
    string amount = 3;
}

message CreateReceiptResponse {
    //
    // Receipt represent either blockchains address or lightning network invoice,
    // depending on the type of the request.
    string receipt = 2;
}

message BalanceRequest {
    //
    // Asset is an acronim of the crypto currency.
    Asset asset = 1;

    //
    // Media is a type of technology which is used to transport value of
    // underlying asset.
    Media media = 2;
}

message BalanceResponse {
    //
    // Available is the number of funds which could be used by this account
    // to send funds to someone else within the specified media.
    string available = 1;

    //
    // Pending is the number of funds are in the state of confirmation. In
    // case of blockchain media it is the transactions which are not
    // confirmed. In case of lightning media it is funds in pending payment
    // channels.
    string pending = 2;
}

message ValidateReceiptRequest {
    //
    // Receipt is the blockchain address in case of blockchain media and
    // lightning network invoice in case of lightning media.
    string receipt = 1;

    //
    // Asset is an acronim of the crypto currency.
    Asset asset = 2;

    //
    // Media is a type of technology which is used to transport value of
    // underlying asset.
    Media media = 3;

    //
    // (optional) Amount is the amount which should be received on this
    // receipt.
    string amount = 4;
}

message EstimateFeeRequest {
    //
    // Asset is an acronim of the crypto currency.
    Asset asset = 1;

    //
    // Media is a type of technology which is used to transport value of
    // underlying asset.
    Media media = 2;

    //
    // Amount is number of money which should be given to the another entity.
    string amount = 3;
}

message EstimateFeeResponse {
    //
    // MediaFee is the fee which is taken by the blockchain or lightning
    // network in order to propagate the payment.
    string media_fee = 1;
}

message SendPaymentRequest {
    //
    // SystemPaymentID is the payment id which was created by service itself,
    // for unified identification of the payment.
    string system_payment_id = 1;
}

message PaymentByIDRequest {
    //
    // SystemPaymentID is the payment id which was created by service itself,
    // for unified identification of the payment.
    string system_payment_id = 1;
}

message PaymentsByReceiptRequest {
    //
    // Receipt represent either blockchains address or lightning
    // network invoice, depending on the type of the request.
    string receipt = 1;
}

message PaymentsByReceiptResponse {
    repeated Payment payments = 1;
}


message ListPaymentsRequest {
    //
    // (optional) Status denotes the stage of the processing the payment.
    PaymentStatus status = 1;

    //
    // (optional) Type denotes the direction of the payment.
    PaymentType type = 2;

    //
    // (optional) Asset is an acronim of the crypto currency.
    Asset asset = 3;

    //
    // (optional) Media is a type of technology which is used to transport
    // value of underlying asset.
    Media media = 4;
}

message ListPaymentsResponse {
    repeated Payment payments = 1;
}

message Payment {
    //
    // SystemPaymentID is the payment id which was created by service itself,
    // for unified identification of the payment.
    string system_payment_id = 1;

    //
    // MediaPaymentID in case of blockchain media payment id is the
    // transaction id, in case of lightning media it is the payment hash.
    string media_payment_id = 2;

    //
    // Status denotes the stage of the processing the payment.
    PaymentStatus status = 3;

    //
    // Type denotes the direction of the payment.
    PaymentType type = 4;

    //
    // Asset is an acronim of the crypto currency.
    Asset asset = 5;

    //
    // Media is a type of technology which is used to transport value of
    // underlying asset.
    Media media = 6;

    //
    // Amount is the number of funds which receiver gets at the end.
    int64 amount = 7;

    //
    // MediaFee is the fee which is taken by the blockchain or lightning
    // network in order to propagate the payment.
    string media_fee = 8;
}

// Asset is the list of a trading assets which are available in the exchange
// platform.
enum Asset {
    ASSET_NONE = 0;

    //
    // Bitcoin
    BTC = 1;

    //
    // Bitcoin Cash
    BCH = 2;

    //
    // Ethereum
    ETH = 3;

    //
    // Litecoin
    LTC = 4;

    // Dash
    DASH = 5;
}

// Media is a list of possible media types. Media is a type of technology which
// is used to transport value of underlying asset.
enum Media {
    MEDIA_NONE = 0;

    //
    // BLOCKCHAIN means that blockchain direct used for making the payments.
    BLOCKCHAIN = 1;

    //
    // LIGHTNING means that second layer on top of the blockchain is used for
    // making the payments.
    LIGHTNING = 2;
}

// PaymentStatus denotes the stage of the processing the payment.
enum PaymentStatus {
    STATUS_NONE = 0;

    //
    // WAITING means that payment has been created and waiting to be approved
    // for sending.
    WAITING = 1;

    //
    // PENDING means that service is seeing the payment, but it not yet approved
    // from the its POV.
    PENDING = 2;

    //
    // COMPLETED in case of outgoing/incoming payment this means that we
    // sent/received the transaction in/from the network and it was confirmed
    // number of times service believe sufficient. In case of the forward
    // transaction it means that we succesfully routed it through and
    // earned fee for that.
    COMPLETED = 3;

    //
    // FAILED means that services has tryied to send payment for couple of
    // times, but without success, and now service gave up.
    FAILED = 4;
}

// PaymentType denotes the direction of the payment.
enum PaymentType {
    TYPE_NONE = 0;

    //
    // INCOMING type of payment which service has received from someone else
    // in the media.
    INCOMING = 1;

    //
    // OUTGOING type of payment which service has sent to someone else in the
    // media.
    OUTGOING = 2;
}